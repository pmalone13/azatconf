{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "dbType": {
            "type": "string",
            "allowedValues": [
                "sqlserver",
                "postgres"
            ],
            "defaultValue": "sqlserver",
            "metadata": {
                "description": "The database type."
            }
        },
        "dbServerName": {
            "type": "string",
            "metadata": {
                "description": "The database server name."
            }
        },
        "dbDatabaseName": {
            "type": "string",
            "metadata": {
                "description": "The name of the Crowd database."
            }
        },
        "dbPort": {
            "type": "string",
            "metadata": {
                "description": "The database port to use. 1433 for MS SQL, 5432 for PostgreSQL, 3306 for MySQL."
            }
        },
        "dbUsername": {
            "type": "string",
            "metadata": {
                "description": "The username for the dedicated database user."
            }
        },
        "dbPassword": {
            "type": "securestring",
            "minLength": 8,
            "metadata": {
                "description": "The password for the dedicated database user."
            }
        },
        "vnetName": {
            "type": "string",
            "metadata": {
                "description": "The name of the Crowd virtual network."
            }
        },
        "appSubnetName": {
            "type": "string",
            "metadata": {
                "description": "The name of the subnet within the Crowd virtual network where the Crowd cluster is located."
            }
        },
        "clusterDbAccessNetworkRule": {
            "type": "string",
            "defaultValue": "allowClusterDbAccess",
            "metadata": {
                "description": "The name of the network rule that enables the Crowd cluster to access the database."
            }
        }
    },
    "variables": {
        "dbName": "[split(parameters('dbServerName'),'.')[0]]",
         "isMsSql": "[equals(parameters('dbType'), 'sqlserver')]",
        "dbFullName": "[if(variables('isMsSql'), concat(variables('dbName'), '.', 'database', '.', 'windows', '.', 'net'), concat(variables('dbName'), '.', 'postgres', '.', 'database', '.', 'azure', '.', 'com'))]",
        "mssqlJdbcUrl": "[uri('jdbc:sqlserver://', concat(parameters('dbServerName'), ':', parameters('dbPort'), ';database=', parameters('dbDatabaseName'), ';user=', parameters('dbUsername'), '@', split(parameters('dbServerName'),'.')[0], ';password=', parameters('dbPassword')))]",
        "postgresJdbcUrl": "[uri('jdbc:postgresql://', concat(variables('dbFullName'), ':', parameters('dbPort'), '/', parameters('dbDatabaseName'), '?user=', parameters('dbUsername'), '@', split(parameters('dbServerName'),'.')[0], '&password=', parameters('dbPassword'), '&ssl=true'))]"
    },
    "resources": [
        {
            "type": "Microsoft.Sql/servers/virtualNetworkRules",
            "name": "[concat(variables('dbName'), '/', parameters('clusterDbAccessNetworkRule'))]",
            "condition": "[equals(parameters('dbType'), 'sqlserver')]",
            "apiVersion": "2021-11-01-preview",
            "properties": {
                "virtualNetworkSubnetId": "[resourceId('Microsoft.Network/virtualNetworks/subnets/', parameters('vnetName'), parameters('appSubnetName'))]",
                "ignoreMissingVnetServiceEndpoint": false
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/virtualNetworkRules",
            "name": "[concat(variables('dbName'), '/', parameters('clusterDbAccessNetworkRule'))]",
            "condition": "[equals(parameters('dbType'), 'postgres')]",
            "apiVersion": "2017-12-01",
            "properties": {
                "virtualNetworkSubnetId": "[resourceId('Microsoft.Network/virtualNetworks/subnets/', parameters('vnetName'), parameters('appSubnetName'))]",
                "ignoreMissingVnetServiceEndpoint": false
            }
        }
    ],
    "outputs": {
        "jdbcUrl": {
            "type": "string",
            "value": "[if(equals(parameters('dbType'), 'sqlserver'), variables('mssqlJdbcUrl'), variables('postgresJdbcUrl'))]"
        }
    }
}
